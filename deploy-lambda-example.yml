# This workflow deploys code to an AWS Lambda function using the Lambda GitHub Action.
# It uses OpenID Connect (OIDC) to authenticate with AWS instead of long-term access keys.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Configure AWS IAM OIDC identity provider for GitHub Actions:
#    - Go to the IAM console, navigate to "Identity providers", and create a new provider
#    - Use https://token.actions.githubusercontent.com as the provider URL
#    - Use sts.amazonaws.com as the audience
#    - Complete the wizard to create the provider
#
# 2. Create an IAM role for GitHub Actions:
#    - Create a new role with Web Identity as the trusted entity
#    - Select the OIDC provider you created above
#    - For "Audience", enter "sts.amazonaws.com"
#    - Add a condition to limit the role to your repository:
#      token.actions.githubusercontent.com:sub: repo:your-org/your-repo:*
#    - Attach policies for Lambda and S3 permissions (Can be found on the README.md)
#
# 3. Replace the value of the required parameters
#    - AWS_REGION
#    - AWS_ROLE_TO_ASSUME
#    - LAMBDA_FUNCTION_NAME
#    - LAMBDA_CODE_ARTIFACTS_DIR
#    - LAMBDA_HANDLER
#    - LAMBDA_RUNTIME
#
# 4. Add any additional parameters under the environment variable section and Deploy Lambda Function step.
#
# 5. Install dependencies and build your source code locally or add a step to do so in the workflow. Below is an example in javascript.
#    name: Install dependencies and build Lambda function
#    run: |
#      npm ci
#      npm run build


name: Deploy to AWS Lambda

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: MY_AWS_REGION                         # set this to your AWS region
  AWS_ROLE_TO_ASSUME: MY_ROLE_TO_ASSUME             # set this to your IAM role ARN
  LAMBDA_FUNCTION_NAME: MY_FUNCTION_NAME            # set this to your Lambda function name
  LAMBDA_CODE_ARTIFACTS_DIR: MY_CODE_ARTIFACTS_DIR  # set this to the directory containing your Lambda code
  LAMBDA_HANDLER: MY_LAMBDA_HANDLER                 # set this to your Lambda handler
  LAMBDA_RUNTIME: MY_LAMBDA_RUNTIME                 # set this to your Lambda runtime
  LAMBDA_EXECUTION_ROLE: MY_LAMBDA_EXECUTION_ROLE   # set this to your function's IAM execution role
  # Include additional parameters as needed (Format at LAMBDA_PARAMETER)

permissions:
  id-token: write   # This is required for OIDC authentication
  contents: read    # This is required to checkout the repository

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ env.AWS_REGION }}
        # The role-to-assume should be the ARN of the IAM role you created for GitHub Actions OIDC

    - name: Deploy Lambda Function
      uses: aws-actions/aws-lambda-deploy@v1.1.0
      with:
        function-name: ${{ env.LAMBDA_FUNCTION_NAME }}
        code-artifacts-dir: ${{ env.LAMBDA_CODE_ARTIFACTS_DIR }}
        handler: ${{ env.LAMBDA_HANDLER }}
        runtime: ${{ env.LAMBDA_RUNTIME }}
        role: ${{ env.LAMBDA_EXECUTION_ROLE }}
        # Add any additional inputs your action supports